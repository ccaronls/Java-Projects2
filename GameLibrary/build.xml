<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="MyLIbrary">
    <property environment="env"/>
    <property name="JUNIT_HOME" value="../../../../../eclipse/plugins/org.junit_4.11.0.v201303080030/"/>
    <property name="ECLIPSE_HOME" value="../../../../../Desktop/eclipse"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <property name="outdir" value="antbuild"/>
    <path id="MyLIbrary.classpath">
        <pathelement location="${outdir}"/>
        <pathelement location="${JUNIT_HOME}/junit.jar"/>
    </path>
    <target name="init">
        <mkdir dir="${outdir}"/>
        <copy includeemptydirs="false" todir="${outdir}">
            <fileset dir="src">
                <exclude name="**/*.java"/>
                <exclude name="cc/lib/skunkworks/Reflector.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="${outdir}">
            <fileset dir="test">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="${outdir}">
            <fileset dir="apps">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="${outdir}"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${outdir}" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <src path="test"/>
            <src path="apps"/>
            <exclude name="cc/lib/skunkworks/Reflector.java"/>
            <classpath refid="MyLIbrary.classpath"/>
        </javac>
    </target>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="AnimationMaker">
        <java classname="cc.lib.main.AnimationMaker" failonerror="true" fork="yes">
            <classpath refid="MyLIbrary.classpath"/>
        </java>
    </target>
    <target name="BSplineExample">
        <java classname="cc.app.bspline.BSplineExample" failonerror="true" fork="yes">
            <classpath refid="MyLIbrary.classpath"/>
        </java>
    </target>
    <target name="ClassTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.lib.utils.ClassTest" todir="${junit.output.dir}"/>
            <classpath refid="MyLIbrary.classpath"/>
        </junit>
    </target>
    <target name="FileWatcherTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.lib.utils.FileWatcherTest" todir="${junit.output.dir}"/>
            <classpath refid="MyLIbrary.classpath"/>
        </junit>
    </target>
    <target name="GPXParserTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.app.bspline.GPXParserTest" todir="${junit.output.dir}"/>
            <classpath refid="MyLIbrary.classpath"/>
        </junit>
    </target>
    <target name="MatrixInverter">
        <java classname="cc.lib.main.MatrixInverter" failonerror="true" fork="yes">
            <classpath refid="MyLIbrary.classpath"/>
        </java>
    </target>
    <target name="MatrixTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.lib.game.MatrixTest" todir="${junit.output.dir}"/>
            <classpath refid="MyLIbrary.classpath"/>
        </junit>
    </target>
    <target name="ReflectorTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.lib.utils.ReflectorTest" todir="${junit.output.dir}"/>
            <classpath refid="MyLIbrary.classpath"/>
        </junit>
    </target>
    <target name="ReflectorTest.testCollection">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.lib.utils.ReflectorTest" todir="${junit.output.dir}"/>
            <classpath refid="MyLIbrary.classpath"/>
        </junit>
    </target>
    <target name="TestFileUtils">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.lib.utils.TestFileUtils" todir="${junit.output.dir}"/>
            <classpath refid="MyLIbrary.classpath"/>
        </junit>
    </target>
    <target name="TestStaticInheritence">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.lib.utils.TestStaticInheritence" todir="${junit.output.dir}"/>
            <classpath refid="MyLIbrary.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
