<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="SOC">
    <property environment="env"/>
    <property name="JUNIT_HOME" value="../../../../../eclipse/plugins/org.junit_4.11.0.v201303080030/"/>
    <property name="SenatorsOfCaronAndroid.location" value="../SenatorsOfCaron"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="MyLIbrary.location" value="../GameLibrary"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="JUnit 3.libraryclasspath">
        <pathelement location="../../../../../eclipse/plugins/org.junit_4.11.0.v201303080030/junit.jar"/>
    </path>
    <path id="MyLIbrary.classpath">
        <pathelement location="${MyLIbrary.location}/build"/>
        <pathelement location="${JUNIT_HOME}/junit.jar"/>
    </path>
    <path id="ExternalLibs.userclasspath"/>
    <path id="SOC.classpath">
        <pathelement location="build"/>
        <path refid="JUnit 3.libraryclasspath"/>
        <path refid="MyLIbrary.classpath"/>
        <path refid="ExternalLibs.userclasspath"/>
        <pathelement location="lib/log4j-1.2.17.jar"/>
    </path>
    <target name="init">
        <mkdir dir="build"/>
        <copy includeemptydirs="false" todir="build">
            <fileset dir="src">
                <exclude name="**/*.java"/>
                <exclude name="cc/game/soc/service/"/>
                <exclude name="cc/game/soc/net/"/>
                <exclude name="cc/game/soc/netx/"/>
                <exclude name="cc/game/soc/nety/"/>
                <exclude name="cc/game/soc/model/"/>
                <exclude name="cc/game/soc/netz/"/>
                <exclude name="cc/game/soc/rmi/"/>
                <exclude name="cc/game/soc/core/cak/"/>
                <exclude name="cc/game/soc/ai/"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="build">
            <fileset dir="test">
                <exclude name="**/*.java"/>
                <exclude name="cc/game/soc/base/"/>
                <exclude name="cc/game/soc/model/"/>
                <exclude name="cc/game/soc/service/"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="build">
            <fileset dir="images">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="build"/>
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="build.xml" dir="${MyLIbrary.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="build.xml" dir="${MyLIbrary.location}" inheritAll="false" target="build-project"/>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="build" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <src path="test"/>
            <src path="images"/>
            <exclude name="cc/game/soc/service/"/>
            <exclude name="cc/game/soc/net/"/>
            <exclude name="cc/game/soc/netx/"/>
            <exclude name="cc/game/soc/nety/"/>
            <exclude name="cc/game/soc/model/"/>
            <exclude name="cc/game/soc/netz/"/>
            <exclude name="cc/game/soc/rmi/"/>
            <exclude name="cc/game/soc/core/cak/"/>
            <exclude name="cc/game/soc/ai/"/>
            <exclude name="cc/game/soc/base/"/>
            <exclude name="cc/game/soc/model/"/>
            <exclude name="cc/game/soc/service/"/>
            <classpath refid="SOC.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects">
        <ant antfile="build.xml" dir="${SenatorsOfCaronAndroid.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${SenatorsOfCaronAndroid.location}" inheritAll="false" target="build"/>
    </target>
    <target name="FixSaveFile">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.game.soc.core.FixSaveFile" todir="${junit.output.dir}"/>
            <classpath refid="SOC.classpath"/>
        </junit>
    </target>
    <target name="GUI" depends="build">
        <java classname="cc.game.soc.swing.GUI" failonerror="true" fork="yes">
            <jvmarg line="-ea"/>
            <classpath refid="SOC.classpath"/>
        </java>
    </target>
    <target name="ScenariosTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.game.soc.swing.ScenariosTest" todir="${junit.output.dir}"/>
            <classpath refid="SOC.classpath"/>
        </junit>
    </target>
    <target name="SOCBoardTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.game.soc.core.SOCBoardTest" todir="${junit.output.dir}"/>
            <classpath refid="SOC.classpath"/>
        </junit>
    </target>
    <target name="SOCTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.game.soc.core.SOCTest" todir="${junit.output.dir}"/>
            <classpath refid="SOC.classpath"/>
        </junit>
    </target>
    <target name="StaticTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="cc.game.soc.core.StaticTest" todir="${junit.output.dir}"/>
            <classpath refid="SOC.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
