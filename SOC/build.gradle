apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'cc.game.soc.swing2.GUI'

configurations {
    androidLib.extendsFrom api
}

dependencies {
    implementation project(':GameLibrary')
    //implementation project(':GameLibrary')
    implementation project(':jmdns')
    testImplementation 'junit:junit:4.12'
    //implementation 'junit:junit:4.12'
//    androidLib files('../GameLibrary/build/libs/AndroidGameLibrary.jar')//project(path: ':GameLibrary', configuration: 'androidLib')
    androidLib project(path: ':GameLibrary', configuration: 'androidLib')
    //androidLib project(path: ':GameLibrary', configuration: ':androidLib')
    //compile project(pa) ':GameLibrary' //project(path: ':GameLibrary', configuration: ':androidLib')
//    apiElements project(path: ':GameLibrary', configuration: 'androidLib')
    //androidLib files('../GameLibrary/build/libs/AndroidGameLibrary.jar')
}

sourceSets {

    main {
        java {
            srcDirs = ['src', '../SOCAndroid/build/generated/source/r/debug' ]
        }
        resources {
            srcDirs = ['images', 'resources'];
        }
        //output.resourcesDir = 'build/resources';
    }

    androidLib {
        java {
            srcDirs = [ 'src', '../SOCAndroid/build/generated/source/r/debug' ]
            excludes = ['**/skunkworks/**', '**/swing*/**']
        }
    }

    test {
        java {
            srcDirs = ['test']
            excludes = ['**/jmdns/src/test/**']
        }
        resources {
            srcDirs = ['testResources']
        }
    }

}

compileAndroidLibJava.dependsOn project(':GameLibrary').getTasksByName('androidLibJar', false)
compileAndroidLibJava.classpath += files('../GameLibrary/build/libs/AndroidGameLibrary.jar')


compileAndroidLibJava.dependsOn project(':SOCAndroid').getTasksByName('generateDebugSources', false)

task androidLibJar(type: Jar) {
    archiveBaseName = 'AndroidSOC'
    from sourceSets.androidLib.output.classesDirs
}

artifacts {
    androidLib androidLibJar
}
